@import '../../../styles/variables';
@import '../../../styles/colors';

$button-size-m: 100px;
$spinner-size-m: $button-size-m/6;
$button-size-s: 40px;
$spinner-size-s: $button-size-m/6;
$spin-duration: 2.5s;

.subButton {
    display: flex;
    justify-content: center;
    width: 100%;

    &_button {
        position: relative;
        display: inline-block;
        padding: 1em;
        cursor: pointer;
        user-select: none;
        text-align: center;
        color: map_get($colors, 'dark-dp6');
        border: 0;
        background: map_get($colors, 'primary');
        appearance: none;

        filter: brightness(.8);

        &__small {
            font-size: 16px;
            min-width: $button-size-s;
            border-radius: 20px;
        }

        &__medium {
            font-size: 20px;
            min-width: $button-size-m;
            border-radius: 25px;
        }

        &:hover {
            filter: brightness(1);
        }


        &:focus {
            outline: 0;
            filter: brightness(1);
        }

        &.animate {
            width: $button-size-m/4;
            min-width: 0;
            height: $button-size-m/4;
            cursor: default;
            border-radius: 50%;
            filter: brightness(1);

            &:after {
                position: absolute;
                top: 50%;
                left: 50%;
                content: '';
                transform: translate(-50%, -50%);
                animation: spin ease-in $spin-duration forwards;
                border: 4px solid map_get($colors, 'dark-dp6');
                border-left-color: transparent;
                border-radius: 50%;
            }

            &__small:after {
                width: $spinner-size-s;
                height: $spinner-size-s;
            }

            &__medium:after {
                width: $spinner-size-m;
                height: $spinner-size-m;
            }

            &.success {
                &:before {
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    content: '';
                    transform: translate(-50%, -50%) rotate(0deg) scale(0);
                    animation: success ease-in 0.15s forwards;
                    animation-delay: $spin-duration;
                    border: 4px solid map_get($colors, 'dark-dp6');
                    border-top: 0;
                    border-right: 0;
                }

                &__small:before {
                    width: $spinner-size-s;
                    height: $spinner-size-s/2;
                }

                &__medium:before {
                    width: $spinner-size-m;
                    height: $spinner-size-m/2;
                }
            }

            &.error {
                position: relative;
                animation: vibrate ease-in 0.5s forwards;
                animation-delay: $spin-duration;

                &:before {
                    font-size: 1.8rem;
                    font-weight: bold;
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    content: '!';
                    transform: translate(-50%, -50%) scale(0);
                    animation: error ease-in 0.5s forwards;
                    animation-delay: $spin-duration;
                    text-align: center;
                    color: map_get($colors, 'dark-dp6');
                }
            }
        }
    }
}

@keyframes spin {
    0% {
        transform: translate(-50%, -50%) rotate(0deg) scale(1);
    }
    90% {
        transform: translate(-50%, -50%) rotate(1080deg) scale(1);
    }
    100% {
        transform: scale(0);
    }
}

@keyframes success {
    from {
        transform: translate(-50%, -50%) rotate(0) scale(0);
    }
    to {
        transform: translate(-50%, -50%) rotate(-45deg) scale(1);
    }
}

@keyframes error {
    from {
        transform: translate(-50%, -50%) scale(0);
    }
    to {
        transform: translate(-50%, -50%) scale(1);
        background-color: map_get($colors, 'error');
    }
}

@keyframes vibrate {
    0%, 30%, 60%, 85%, 100% {
        left: 0;
        background-color: map_get($colors, 'error');
    }
    10%, 40%, 90%, 70% {
        left: -2px;
        background-color: map_get($colors, 'error');
    }
    20%, 50%, 80%, 95% {
        left: 2px;
        background-color: map_get($colors, 'error');
    }
}
